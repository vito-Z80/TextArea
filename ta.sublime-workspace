{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"las",
				"lastLineAddr"
			],
			[
				"chec",
				"checkNextChar"
			],
			[
				"star",
				"startCode"
			],
			[
				"start",
				"startCode"
			],
			[
				"check",
				"checkNextChar"
			],
			[
				"cal",
				"calculate"
			],
			[
				"textA",
				"textAddr"
			],
			[
				"cwl",
				"cwl3"
			],
			[
				"co",
				"countWordLength"
			],
			[
				"calc",
				"calculate"
			],
			[
				"nextLine",
				"nextLineDraw"
			],
			[
				"nex",
				"nextLetterY"
			],
			[
				"cont",
				"continueDraw"
			],
			[
				"next",
				"nextLetterDraw"
			],
			[
				"let",
				"letterAddr"
			],
			[
				"scr",
				"scrAddrDE"
			],
			[
				"sta",
				"staticX"
			],
			[
				"line",
				"lines"
			],
			[
				"h",
				"hyphenation"
			],
			[
				"not",
				"notSpace"
			],
			[
				"lin",
				"lines"
			],
			[
				"scree",
				"screen"
			],
			[
				"set",
				"setKey"
			],
			[
				"key",
				"keyboard"
			],
			[
				"le",
				"letterAddr"
			],
			[
				"end",
				"endmodule"
			],
			[
				"any",
				"anyKey"
			],
			[
				"no",
				"noPause"
			],
			[
				"draw",
				"drawStyle"
			],
			[
				"auto",
				"autoHeight"
			],
			[
				"fra",
				"frameColor"
			],
			[
				"fram",
				"frameShadowColor"
			],
			[
				"data",
				"data"
			],
			[
				"he",
				"height"
			],
			[
				"attr",
				"attributesAddr"
			],
			[
				"area",
				"areaColor"
			],
			[
				"colo",
				"colorSymbol"
			],
			[
				"dot",
				"dotScreen"
			],
			[
				"test",
				"testScreen"
			],
			[
				"tex",
				"text"
			],
			[
				"dat",
				"data"
			],
			[
				"fon",
				"fontAddr"
			],
			[
				"hei",
				"heightLimit"
			],
			[
				"rnd",
				"rnd"
			],
			[
				"rn",
				"rndLimit"
			],
			[
				"fo",
				"fontAddr"
			],
			[
				"dra",
				"draw.nextLine"
			],
			[
				"top",
				"topSprite"
			],
			[
				"sc",
				"scrAddrDE"
			],
			[
				"te",
				"textAddr"
			],
			[
				"so",
				"sonreq"
			],
			[
				"inc",
				"include"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.asm",
			"settings":
			{
				"buffer_size": 2285,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\tmodule calculate\nscrAddrDE\n\t//\tl = x; h = y\n\tld a,#40\n\tadd h\n        and %11111000\n        ld d,a\n        ld a,h\n        and 7\n        rrca\n        rrca\n        rrca\n        add l\n        ld e,a\n        //      DE = screen address\n\tret\n//-------------------\nnextLine\n        ; next screen line address\n        inc d\n        ld  a,d\n        and 7\n        jr  nz,$+12\n        ld  a,e\n        add a,32\n        ld  e,a\n        jr  c,$+6\n        ld  a,d\n        sub 8\n        ld  d,a\n        ret\n//-------------------\nrnd\tdw 23821\nrndLimit\n\t//\tA = limit\n\tld c,a\n\tld hl,(rnd)\n\tld a,h\n\tsbc a,l\n\tld l,a\n\tadd hl,hl\n\tld (rnd),hl\n\tand 63\n1:\n\tsrl a\n\tcp c\n\tjr nc,1B\n\t//\treturn A = coordinate\n\tret\n//-------------------\nletterAddr\n        ; calc address of char in font\n        ld l,a,h,0      ; a=char\n        add hl,hl,hl,hl,hl,hl\nfontAddr\n        ld bc,0\n        add hl,bc       ; hl=address in font\n        ret\n//-------------------\nattributesAddr\n        ld l,(ix+data.y)\n        ld h,0\n        add hl,hl\n        add hl,hl\n        add hl,hl\n        add hl,hl\n        add hl,hl\n        ld b,#58\n        ld c,(ix+data.x)\n        add hl,bc\n        //      HL = attributes address from symbol coordinates\n        ret\n//-------------------\n/*\n        всё кроме букв может быть разорвано строкой, включая цифры\n*/\nlines   block 22*2 // адреса текста каждой вычисленной строки (максимум 22 строки для печати, конец == #00 high)\nlastLineAddr    dw 0    //      адрес неразрываной строки слов\nlastWordAddr    dw 0    //      адресс последнего проверяемого слова или знака препинания\ntextAreaWidth   db 0    //      ширина текста из раннее установленных данных\nhyphenation\n        ld l,(ix+data.textAddr)\n        ld h,(ix+data.textAddr+1)\n        ld (lastLineAddr),hl\n        //     сохранили адресс начала текста для дальнейшего использования\n        ld a,(ix+data.width)\n        ld (textAreaWidth),a\n        ld c,a\n        //      сохранили ширину текстовой площади для дальнейшего использования\n\n        push ix\n        ld ix,lines     //      коллекция адресов линий текста\n\naga\n        ld (ix),l\n        ld (ix+1),h\n        inc ix\n        inc ix\n        //      сохранили начало текста в первую ячейку коллекции адресов линий текста\n\n        //      HELLO \n\nnewLineProcess\n        ld a,(ix+data.width)\n        ld b,a                  // ширина строки     \n        ld (lastLineAddr),hl    // сохраняем адрес начала слова на случай если слово не войдет в строку\ncheckNextChar\n\n        \n\n\n        //      определяем БуКвА в HL или нечто другое\n        ld a,(hl)\n        or a\n        jr z,endText\n        sub 32\n;         or a\n;         jr z,userSymbol\n        cp 33\n        jr c,split           \n        sub 91-32\n        cp 6\n        jr c,split\n        sub 123-91\n        cp 5 \n        jr c,split\n\n\n;         inc hl\n;         dec b\n;         jr nz,checkNextChar\n;         jr split\n        ld (lastWordAddr),hl\nword\n\n        inc hl\n        dec b\n        jr nz,w2\n        ld a,(lastWordAddr)\n        ld l,a\n        ld a,(lastWordAddr+1)\n        ld h,a\n        jr aga\n        //----------------------twink\nw2\n        ld a,(hl)\n        or a\n        jr z,endText\n        sub 32\n;         or a\n;         jr z,userSymbol\n        cp 33\n        jr c,split           \n        sub 91-32\n        cp 6\n        jr c,split\n        sub 123-91\n        cp 5 \n        jr c,split\n\n        //----------------------\n\n        jr word\n\n\nendText\n        ld (ix+1),0\n        pop ix\n        ret\n\nsplit\n        ld (lastWordAddr),hl\n        inc hl\n        dec b\n        jr nz,checkNextChar\n        ld (lastLineAddr),hl\n        jr newLineProcess\nuserSymbol\n        or a\n        jr z,endText\n        inc hl\n        //      пользовательские символы такие как: цвет и т.д.\n        ret\n//------------------------------\n\nhLoop   \n        ld a,(hl)\n        cp \" \"\n        jr nz,countWordLength   //      если не пробел значит слово \n        inc hl\n        dec c\n        jp m,endLine    //      пробел выходит за передлы строки\n        jr hLoop\n\ncountWordLength         //      считаем длинну слова и отнимаем ее от оставшейся ширина\n        ld b,0\n        ld (lastLineAddr),hl // сохраняем адрес начала слова на случай если слово не войдет в строку\ncwlLoop\n        inc b\n        ld a,(hl)\n        inc hl\n        cp 0                    //      конец всего текста\n        jr nz,cwl2\n        //     установить точку выхода - старший байт конечного адреса текстовой линии в НОЛЬ\n        inc ix\n        ld (ix),a\n        pop ix\n        ret\ncwl2\n;         cp \".\"\n;         jr z,cwl3\n        cp \" \"                  //      конец слова\n        jr nz,cwlLoop\ncwl3\n        ld a,c\n        sub b\n        ld c,a\n        jp p,hLoop  //      слово вошло в строку - выходим, продолжаем\n        //              слово не вошло в строку:\n        //                      сохраняем адрес данного слова для новой строки\nendLine\n        ld a,(lastLineAddr)\n        ld (ix),a\n        ld a,(lastLineAddr+1)\n        inc ix\n        ld (ix),a\n        inc ix\n        //      восстанавливаем ширину строки\n        ld a,(textAreaWidth)\n        ld c,a\n        jr hLoop\n//-------------------\nstandard\n        ld e,(ix+data.textAddr)\n        ld d,(ix+data.textAddr+1)\n        ld hl,lines\ns2\n        ld (hl),e\n        inc hl\n        ld (hl),d\n        inc hl \n        ld b,(ix+data.width)\ns1\n        inc de\n        ld a,(de)\n        or a\n        jr z,ending\n        djnz s1\n        jr s2\nending\n        inc hl\n        ld (hl),0\n        ret\n//-------------------\n        display \"hyphenation: \", /A, hyphenation\n\tendmodule\n",
			"file": "TALib/calculate.asm",
			"file_size": 5793,
			"file_write_time": 132308469147959822,
			"settings":
			{
				"buffer_size": 5537,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "TALib/text.asm",
			"settings":
			{
				"buffer_size": 2433,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "TALib/draw.asm",
			"settings":
			{
				"buffer_size": 1128,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "TALib/frame.asm",
			"settings":
			{
				"buffer_size": 3044,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "TALib/struct.asm",
			"settings":
			{
				"buffer_size": 1181,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "TALib/memory.asm",
			"settings":
			{
				"buffer_size": 93,
				"encoding": "Cyrillic (Windows 1251)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/ZX/Sublime/Data/Packages/z80asm/README.md",
			"settings":
			{
				"buffer_size": 5691,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/z80asm/z80asm.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/z80asm/z80asm.sublime-build",
					""
				],
				[
					"Packages/z80asm/z80asm.sublime-build",
					"Run"
				],
				[
					"Packages/z80asm/z80asm.sublime-build",
					"Build and Run"
				]
			],
			[
				"Packages/z80asm/z80asm.sublime-build",
				"Build and Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/ZX/Projects/libs/TextArea",
		"/C/ZX/Projects/libs/TextArea/TALib"
	],
	"file_history":
	[
		"/C/ZX/Projects/libs/TextArea/README.md",
		"/C/ZX/Projects/libs/TextArea/TALib/keyboard.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/frame.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/calculate.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/bottomSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/rightSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/bottomRightSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/topRightSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/struct.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/memory.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/text.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/bottomLeftSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/topLeftSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/topSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/FrameSprite/leftSprite.asm",
		"/C/ZX/Projects/libs/TextArea/TALib/leftSprite.asm",
		"/C/ZX/Projects/YangaV3.0/sound/sound.a80",
		"/C/ZX/Projects/YangaV3.0/sound/sound.asm",
		"/C/ZX/Projects/YangaV3.0/logic.asm",
		"/C/ZX/Projects/YangaV3.0/Yanga.asm",
		"/C/ZX/Projects/YangaV3.0/mainMenu.asm",
		"/C/ZX/Sublime/Data/Packages/z80asm/z80asm.sublime-settings",
		"/C/ZX/Projects/YangaV3.0/scroll.asm",
		"/C/ZX/Sublime/Data/Packages/z80asm/build.bat",
		"/C/ZX/Sublime/Data/Packages/z80asm/run.bat"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			")\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2285,
						"regions":
						{
						},
						"selection":
						[
							[
								927,
								927
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "TALib/calculate.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5537,
						"regions":
						{
						},
						"selection":
						[
							[
								3087,
								3087
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage",
							"tab_size": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2124.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "TALib/text.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2433,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "TALib/draw.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1128,
						"regions":
						{
						},
						"selection":
						[
							[
								110,
								110
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "TALib/frame.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3044,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								111
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "TALib/struct.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1181,
						"regions":
						{
						},
						"selection":
						[
							[
								503,
								508
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "TALib/memory.asm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 93,
						"regions":
						{
						},
						"selection":
						[
							[
								79,
								79
							]
						],
						"settings":
						{
							"syntax": "Packages/z80asm/z80asm.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "/C/ZX/Sublime/Data/Packages/z80asm/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5691,
						"regions":
						{
						},
						"selection":
						[
							[
								3801,
								3801
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2124.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.744693396226,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 219.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 127.0
	},
	"pinned_build_system": "Packages/z80asm/z80asm.sublime-build",
	"project": "ta.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 224.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
